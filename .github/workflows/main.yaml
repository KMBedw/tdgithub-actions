---

name: CI/CD Pipeline

on: [push]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set environment variable
        run: echo "MY_VARIABLE=This is a variable" >> "$GITHUB_ENV"
      
      - name: Display environment variable
        run: echo ${{ env.MY_VARIABLE }}
      
      - name: Show secret
        run: echo ${{ secrets.MY_SECRET }}
      
      - name: Create a file
        run: echo "Hello World" > hello.txt
      
      - name: Show file contents
        run: cat hello.txt
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Report Coverage
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: GitHub Super-Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: edwinko/tdgithub-actions:latest
          cache-from: type=registry,ref=edwinko/tdgithub-actions:buildcache
          cache-to: type=registry,ref=edwinko/tdgithub-actions:buildcache,mode=max

  second-job:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Second Job Step
        run: echo "Second job running"
